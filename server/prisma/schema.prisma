generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  createdAt DateTime  @default(now())
  shackers  Shacker[]
}

model Shacker {
  id              String    @id @default(uuid())
  name            String    @unique
  gender          String
  characterType   String    @default("spineboy") // Type visuel du personnage
  level           Int       @default(1)
  xp              Int       @default(0)
  hp              Int       @default(50)
  strength        Int       @default(3)
  agility         Int       @default(3)
  speed           Int       @default(3)
  endurance       Int       @default(3)
  
  // Système LaBrute
  talentPoints    Int       @default(0)
  unlockedTalents String    @default("[]")
  weapons         String    @default("[]")
  skills          String    @default("[]")
  pet             String?
  
  // Système de pupils
  masterId        String?
  master          Shacker?  @relation("MasterPupil", fields: [masterId], references: [id])
  pupils          Shacker[] @relation("MasterPupil")
  
  // Tournois
  tournamentWins  Int       @default(0)
  tournamentBest  String?   // Meilleur résultat
  
  createdAt       DateTime  @default(now())
  userId          String
  fightsA         Fight[]   @relation("ShackerA")
  fightsB         Fight[]   @relation("ShackerB")
  user            User      @relation(fields: [userId], references: [id])
}

model Fight {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  shackerAId String
  shackerBId String
  winnerId   String
  log        String
  xpGained   Int      @default(0)
  type       String   @default("normal") // normal, tournament, training
  shackerA   Shacker  @relation("ShackerA", fields: [shackerAId], references: [id])
  shackerB   Shacker  @relation("ShackerB", fields: [shackerBId], references: [id])
}

model Tournament {
  id          String   @id @default(uuid())
  date        DateTime @default(now())
  status      String   @default("pending") // pending, active, completed
  brackets    String   // JSON string des brackets
  winnerId    String?
  createdAt   DateTime @default(now())
}
